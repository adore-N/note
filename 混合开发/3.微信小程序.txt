------------------------微信小程序------------------------
	注册小程序帐号:
		公众平台->注册->小程序(留一个微信号，作为管理员)
	
	帮助：微信公众平台->小程序登录->首页->开发文档

	工具安装:
		https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html
		
	后去拿到开发秘钥:
		获取AppID:公众平台登录小程序->设置->wxf34e69dfcc966870
	
	简易教程:
		创建项目
	框架：
		为了方便开发者减少配置项，描述页面的四个文件必须具有相同的路径与文件名。
		
		逻辑层:  jsCore

			注册页面或者主 app({配置})|pages({配置})

			配置:
				data:{}  数据
				钩子函数(参数){}
				自定义函数(){  this  指向 当前模块|当前页面 }
				自定义属性:值

			页面抓取主程:	
				let app=getApp(); app.实例属性.数据名  app.实例方法.数据名

			数据获取:
				this.data.数据  获取当前模块数据  

			数据绑定: {{数据}} | 属性="{{值}}" 

			数据修改:

				this.setData({数据名:值})  修改当前模块数据
				this.data.数据=value  第一次不响应

				app.setData({数据名:值})  修改APP模块数据
				app.setData({数据名:值},callback)  修改APP模块数据
			
			事件：

				bindxxx   xxx=元生移动端事件名
					列： <View bindtap="实例方法名">
				catchxxx
				bind冒泡，catch不冒泡。
				事件传参: <组件 data-xx="值"  bindtap="实例方法名">     js: e.currentTarget.dataset.xx
				事件对象:  实例方法: e.detail

			自定义组件
				header 组件
				Component({配置})

					properties: {//组件的属性列表
					    title: { // 属性名
					      type: String,
					      value: '标题'
					    },
					  },

					data:{} 组件数据

					methods:{} 组件方法


			注册组件:

				app.json   全局注册
					usingComponents": {
						组件名: 组件变量名
					}

				pages.json  局部注册
					usingComponents": {}

				component.json  组件注册
					usingComponents": {}
					"component": true,  //当前组件可以套用组件

			调用:  <header title="值"></header>

			路由方式: 

				json配置(tab跳转)|组件跳转(声明式跳转)|api跳转（编程式跳转)

				navigate, redirect 只能打开非 tabBar 页面。

				switchTab 只能打开 tabBar 页面。

				reLaunch 可以打开任意页面


			注意:
			
				navigate 新+页面栈
				switchTab 目标页面入栈  关闭其他所有非 tabBar 页面
				redirect 会替换当前栈
				reLaunch 全部出栈，目标页面栈入栈
				navigateBack 当前页面出栈
				exit 全部出栈，无进栈


			路由传参:
				url: '/pages/xx/xx?a=1&b=2'  switchTab不能传参数
			接参:
				app.js    onLaunch(options)
				pages.js  onLoad(options) options.a/b

			跳转到其他小程序
					目标appId: 需要在app.json配置，不可以跳转到自己的appId
					<navigator target="miniProgram" open-type="navigate" app-id="wxcb2ef166e0715ba9" path="/pages/xx/xx" extra-data="{a:1,b:2}" >打开绑定的小程序</navigator>
		
		视图层: web-view

			WXML:	组件，非标签
			WXSS:	CSS
				尺寸：  rpx
					1rpx = 0.5px = 1 物理像素
				推荐: 以类||ID开头的选择器,便于跨端    flex布局


	数据交互：
		接口: https://www.jianshu.com/p/d9701a81be8e
			.wxss 中的本地资源图片无法通过 WXSS 获取，可以使用网络图片，或者 base64，或者使用<image/>标签
			wx.request不支持请求本地json
			wx.request不支持请求接口(localhost) 勾上 "不校验合法域名"

			豆瓣的接口需要携带header: {
		        'content-type': 'json' // 默认值
		      },

------------------------------------------------------------------------------------------

mpvue框架:  http://mpvue.com/mpvue/
		
	环境搭建:
		vue init mpvue/mpvue-quickstart my-project
	
	编写方式: 
		vue语法 + dom + css/sass + 小程序表单组件 + 第三方的 weUI 库 + mpvue.api()  √


		钩子函数:
			vue + 小程序  除特殊情况外，不建议使用小程序的生命周期钩子  推荐 mounted
		路由和路由参数:
			路由使用小程序的，vue-router不支持, 使用navigator || a (内部不可以包含其他元素)
			取小程序在 app onLaunch/onShow 时候传递的 options ->  this.$root.$mp.appOptions 
			page onLoad 时候传递的 options -> this.$root.$mp.query
		语法规则:
			小程序里所有的 BOM／DOM 操作不可用，也就是说 v-html 指令不能用
			不支持过滤器(filter)，动态组件(component)，字符串模板(inline-template|X-Templates)，插槽(Slot),异步组件
			Class 与 Style 绑定 的值不支持object
			键盘事件 不支持
			this指向 vue组件
			v-for (item) of xx 时 出现 loader解析错误 -> item of xx
			数据绑定时，不支持返单引

		css: 支持css/sass/scss/less/postcss
			vue的css没有隔离作用域|小程序有 	vue需要时scoped
			css里面 涉及到图片不可使用本地图片，使用base64 || 网络图片
		api:
			小程序api使用桥接器： mpvue.api(...)
		
		事件:
			事件对象: ev.mp.detail.value 抓取事件对象目标的输入值

	测试:
		微信开发者工具->导入项目->vue的dist/wx->写入appId
		
	注意：

		环境配置:

			关闭微信开发者工具的 ES6 转 ES5 ，就可以打 debug 啦
			新增的页面需要重新 npm run dev 来进行编译
			微信的调试工具指向 my-project
			资源： static

		app|pages 配置:
			全局: src/app.json 对等  小程序app.json
				page: "pages/profile/main" 对等 "pages/profile/profile"
				tabbar: 图片资源指向static
			页面: src/pages/xx/main.json 对等 小程序pages/xx/xx.json

			全局样式:
				app.vue > style   对等 小程序app.wxss
			页面样式:
				/src/pages/xx/xx.vue>style  小程序pages.wxss

		mpvue中使用Vant Weapp
			1. 从Vant Weapp官网github克隆一份代码下来
			2. 把克隆代码的dist目录下的所有文件复制到我们自己项目的/static/vant/目录下
			3. 在需要引入的页面目录下的main.json文件中
				{ 
				  "usingComponents": {
				      "van-button": "/static/vant/button/index"
				..
			4. 我们需要将项目打包一下 , 因为推荐了新组件
			5、 最后一定记得打开微信小程序开发工具中的es6转es5(不然会报错的)
			6. 通过ui库提供的样式，只能添加新样式 ， 不能覆盖原有、、、、
				直接修改 dist/对应组件.wxss 

			参考： https://www.jianshu.com/p/2adff147b8a6

		坑：
			splash页面模拟器上跳转失败，真机有效
			删除index报错等信息

			遇事需要重启微信端，和 npm run

			详情页会保留上一次的数据:
				组件被反复进入时vue未卸载当前组件，组件被复用了
				小程序的onUnload会因为回退出栈
				onUnLoad(){清空当前页面的data}
--------------------------------------------------------------------
原理软文:

	MVVM/MVP/MV*
	双向绑定：
	状态管理（flux）
	路由

	记忆：
	   中心思想（关键词）

--------------------------------------------------------------------------------------------------------

taro：https://taro.aotu.io/
		
		安装:
			npm install -g @tarojs/cli | yarn global add @tarojs/cli
		创建:
			taro init 目录
		运行开发：
			yarn dev:h5   |  yarn dev:weapp
			npm run dev:weapp | ...
		打包: 
			yarn build:weapp 可选
		调试：
			微信工具引入项目，指向当前项目根
			需要设置关闭 ES6 转 ES5 功能，开启可能报错
			需要设置关闭上传代码时样式自动补全，开启可能报错
			需要设置关闭代码压缩上传，开启可能报错

		开发规范
			全局配置： 
				app.js > config属性={} 对等 小程序app.json
			页面配置：
				page.js  > config属性={} 对等 小程序page.json 
			生命周期:  
				生命周期中通过 this.$router.params 访问到程序初始化参数|路由参数
				componentDidMount/componentWillMount  对等 onLaunch/onLoad
				componentDidShow/componentDidHide 对等 onShow/onHide
				支持小程序钩子
			获取主程： 
				Taro.getApp(Object) 获取到程序 App 实例
			样式：
				若要支持 React Native 端，必须采用 Flex 布局，并且样式选择器仅支持类选择器，思想：对齐短板
				尺寸单位建议使用 px、 百分比 %，taro自动转换
				Taro 提供了直接在样式文件中引用本地资源的方式
				CSS Modules 默认关闭： 需要开启参考https://nervjs.github.io/taro/docs/css-modules.html
				入口文件 app.js 里面引入的样式就是全局样式
			组件：
				支持： taro内置，taro-ui，小程序组件（useingComponents），理论支持第三方ui、weui组件
					推荐： 内置组件和官方ui组件，支持H5转换
				不支持： jsx标签
				taro内置组件 使用方式对等 小程序组件 
					组件属性: xx-xx -> xxXx
					引入来自 import { Map } from '@tarojs/components'
				不支持 <> <Xxx.Fragement> 等方式
				文字要包在 Text 组件里面
				暂不支持在 render() 之外的方法定义 JSX
				引用图片、音频、字体等文件  import namedPng from '../../images/path/named.png'|require('../../xx.png')

				修改组件样式： 整体修改主题 -> 查询元素原始样式，同名覆重写在组件.css

			api：
				小程序的api通过Taro.api()桥接
				Taro.request().then() 支持then
			路由： 同小程序， 不可用react-router-dom
				config 配置
				Taro.api() 编程式跳转
				组件：Navigator 声明式跳转
				this.$router.params 访问到程序初始化参数|路由参数
			事件:
				bindtap -> onTap
			转换平台：
				微信小程序转 Taro： 	
					小程序项目的根目录： taro convert
					转换后的代码保存在根目录下的 taroConvert
					定位到 taroConvert 目录
					执行 npm install | yarn
					使用 taro build 命令编译到对应平台
			坑：
				list组件，不可自定义内部结构， 推荐vant cell 未测试
				入口文件render 方法：不写逻辑，不会起作用
				Taro 与 React 一样，也支持 PropTypes 检查类型，目前在小程序端还有些问题
				this 指向的是 Taro 页面或组件的实例
				this.$scope 获取 Taro 的页面和组件所对应的小程序原生页面和组件的实例
				不能使用 Array#map 之外的方法操作 JSX 数组
				自定义组件样式默认是不能受外部样式影响的，需要定义在组件内部

taro-ui: 
			https://taro-ui.aotu.io

			安装:
				npm install taro-ui -S | yarn add taro-ui --save
			使用：
				app.js： import 'taro-ui/dist/style/index.scss' // 全局引入样式一次即可
				page.js： import { AtButton } from 'taro-ui'

				<AtButton type='primary'>按钮文案</AtButton>

				注意： 需要重启 yarn dev:weapp 和微信工具

					  修改组件样式： 整体修改主题 -> 查询元素原始样式，同名覆重写在组件.css

			自定义主题：
				生成主题: https://nervjs.github.io/taro-ui-theme-preview/
				下载custom-theme.scss,放置与app.js同目录
				并在末尾引入全局样式  @import "~taro-ui/dist/style/index.scss";
				app.js: import './custom-theme.scss'
				重启服务->重启微信工具

微信小程序_mpvue的UI库

	https://weapp.iviewui.com/
	https://youzan.github.io/vant-weapp/#/intro